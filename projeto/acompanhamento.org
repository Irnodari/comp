# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+STARTUP: overview indent
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+TAGS: noexport(n) deprecated(d)

* Avaliação das Etapas do Projeto de Compilador
** Sumário

| Relatório de Avaliação |
|------------------------|
| [[#avaliação-da-etapa-1][Etapa 1]]                |
| [[#avaliação-da-etapa-2][Etapa 2]]                |
| [[#avaliação-da-etapa-3][Etapa 3]]                |
| [[#avaliação-da-etapa-4][Etapa 4]]                |
| [[#avaliação-da-etapa-5][Etapa 5]]                |
| [[./acompanhamento-e6.org][Etapa 6]]                |

** Formação dos grupos

Temos estes grupos.

| Grupo   | ID     |
|---------+--------|
| Tau     | ???638 |
| Tau     | ???681 |
| Sigma   | ???165 |
| Sigma   | ???652 |
| Omega   | ???612 |
| Omega   | ???887 |
| Kappa   | ???712 |
| Kappa   | ???087 |
| Gamma   | ???692 |
| Gamma   | ???991 |
| Omicron | ???726 |
| Omicron | ???732 |
| Psi     | ???162 |
| Psi     | ???361 |
| Alpha   | ???759 |
| Alpha   | ???108 |
| Zeta    | ???909 |
| Zeta    | ???451 |
| Rho     | ???253 |
| Rho     | ???172 |
| Beta    | ???110 |
| Beta    | ???545 |
| Theta   | ???502 |
| Theta   | ???285 |
| Iota    | ???490 |

* Avaliação da Etapa 1
** Arquivos para testes                                             :ATTACH:
:PROPERTIES:
:Attachments: e1tests.tgz
:ID:       91e17909-686d-4174-a4be-d2e1eabcc8d6
:END:

Veja [[./data/91/e17909-686d-4174-a4be-d2e1eabcc8d6/e1tests.tgz][este arquivo]].

** Log de execução dos testes                                       :ATTACH:
:PROPERTIES:
:Attachments: e1v2.log
:ID:       e58b72e6-a5d6-456d-b045-326dcb671409
:END:

Veja o [[./data/e5/8b72e6-a5d6-456d-b045-326dcb671409/e1v2.log]].

** Notas Objetiva e Subjetiva

| Grupo   | Avaliacao | Nota |
|---------+-----------+------|
| Iota    | E1.S      |    10 |
| Omicron | E1.S      |    10 |
| Tau     | E1.S      |    10 |
| Theta   | E1.S      |    10 |
| Zeta    | E1.S      |    10 |
| Sigma   | E1.S      |   9.9 |
| Kappa   | E1.S      | 9.855 |
| Gamma   | E1.S      |  9.65 |
| Rho     | E1.S      |   9.6 |
| Alpha   | E1.S      |   9.2 |
| Omega   | E1.S      |   9.2 |
| Beta    | E1.S      |  8.75 |
| Psi     | E1.S      |   8.7 |
| Iota    | E1.O      |   9.1 |
| Omicron | E1.O      |    10 |
| Tau     | E1.O      |   9.8 |
| Theta   | E1.O      |    10 |
| Zeta    | E1.O      |    10 |
| Sigma   | E1.O      |   9.8 |
| Kappa   | E1.O      |   9.8 |
| Gamma   | E1.O      |   9.5 |
| Rho     | E1.O      |    10 |
| Alpha   | E1.O      |    10 |
| Omega   | E1.O      |   9.8 |
| Beta    | E1.O      |   9.3 |
| Psi     | E1.O      |   9.6 |

* Avaliação da Etapa 2
** Arquivos para testes                                             :ATTACH:
:PROPERTIES:
:ID:       ac0f5346-3702-400c-8426-954a47c4a1a1
:Attachments: e2tests.tgz
:END:

Veja [[./data/ac/0f5346-3702-400c-8426-954a47c4a1a1/e2tests.tgz][este arquivo]].

São 150 arquivos de teste. A tabela abaixo identifica quais os testes
considerados sintaticamente corretos (coluna *Falho* deve estar com
valor zero) e quais estão sintaticamente incorretos (coluna *Falho* com
o valor um).

| Test   | Falho |
|--------+-------|
| asl01  |     0 |
| asl02  |     0 |
| asl03  |     0 |
| asl04  |     0 |
| asl05  |     0 |
| asl06  |     0 |
| asl07  |     0 |
| asl08  |     0 |
| asl09  |     1 |
| asl10  |     1 |
| asl11  |     1 |
| asl12  |     1 |
| asl13  |     1 |
| asl14  |     1 |
| asl15  |     1 |
| asl16  |     1 |
| asl17  |     1 |
| asl18  |     1 |
| asl19  |     1 |
| asl20  |     1 |
| asl21  |     1 |
| asl22  |     1 |
| asl23  |     1 |
| asl24  |     1 |
| asl25  |     0 |
| asl26  |     1 |
| asl27  |     0 |
| asl28  |     0 |
| asl29  |     1 |
| asl30  |     0 |
| asl31  |     0 |
| asl32  |     0 |
| asl33  |     0 |
| asl34  |     1 |
| asl35  |     0 |
| asl36  |     0 |
| asl37  |     0 |
| asl38  |     0 |
| asl39  |     0 |
| asl40  |     1 |
| asl41  |     0 |
| asl42  |     0 |
| asl43  |     0 |
| asl44  |     0 |
| asl45  |     1 |
| asl46  |     0 |
| asl47  |     0 |
| asl48  |     0 |
| asl49  |     1 |
| asl50  |     0 |
| asl51  |     0 |
| asl52  |     0 |
| asl53  |     0 |
| asl54  |     0 |
| asl55  |     1 |
| asl56  |     0 |
| asl57  |     0 |
| asl58  |     0 |
| asl59  |     0 |
| asl60  |     0 |
| asl61  |     1 |
| asl62  |     0 |
| asl63  |     0 |
| asl64  |     1 |
| asl65  |     0 |
| asl66  |     0 |
| asl67  |     1 |
| asl68  |     1 |
| asl69  |     1 |
| asl70  |     1 |
| asl71  |     1 |
| asl72  |     1 |
| asl73  |     1 |
| asl74  |     1 |
| asl75  |     1 |
| asl76  |     0 |
| asl77  |     0 |
| asl78  |     0 |
| asl79  |     0 |
| asl80  |     0 |
| asl81  |     0 |
| asl82  |     1 |
| asl83  |     1 |
| asl84  |     1 |
| asl85  |     1 |
| asl86  |     1 |
| asl87  |     1 |
| asl88  |     1 |
| asl89  |     1 |
| asl90  |     1 |
| asl91  |     1 |
| asl92  |     1 |
| asl93  |     1 |
| asl94  |     1 |
| asl95  |     1 |
| asl96  |     1 |
| asl97  |     1 |
| asl98  |     1 |
| asl99  |     1 |
| asl100 |     1 |
| asl101 |     1 |
| asl102 |     1 |
| asl103 |     1 |
| asl104 |     1 |
| asl105 |     1 |
| asl106 |     1 |
| asl107 |     1 |
| asl108 |     1 |
| asl109 |     1 |
| asl110 |     1 |
| asl111 |     1 |
| asl112 |     1 |
| asl113 |     1 |
| asl114 |     0 |
| asl115 |     1 |
| asl116 |     1 |
| asl117 |     1 |
| asl118 |     1 |
| asl119 |     1 |
| asl120 |     1 |
| asl121 |     1 |
| asl122 |     1 |
| asl123 |     1 |
| asl124 |     1 |
| asl125 |     1 |
| asl126 |     1 |
| asl127 |     1 |
| asl128 |     1 |
| asl129 |     0 |
| asl130 |     1 |
| asl131 |     1 |
| asl132 |     1 |
| asl133 |     1 |
| asl134 |     1 |
| asl135 |     1 |
| asl136 |     1 |
| asl137 |     1 |
| asl138 |     0 |
| asl139 |     0 |
| asl140 |     0 |
| asl141 |     0 |
| asl142 |     0 |
| asl143 |     0 |
| asl144 |     0 |
| asl145 |     0 |
| asl146 |     0 |
| asl147 |     0 |
| asl148 |     0 |
| asl149 |     0 |
| asl150 |     0 |

** Log de execução dos testes                                       :ATTACH:
:PROPERTIES:
:ID:       c09e363d-82b8-4cec-a76d-53ba0b8da81e
:Attachments: e2v3.log
:END:

Veja o [[./data/c0/9e363d-82b8-4cec-a76d-53ba0b8da81e/e2v1.log]].

Um sumário dos testes onde as respostas foram consideradas equivocadas
está na tabela abaixo. Nos casos listados abaixo, existem duas
possibilidades: (1) ou o grupo informou que a entrada estava incorreta
quando na realidade estava correta; (2) ou o grupo informou que a
entrada estava correta quando na realidade estava incorreta.

| Grupo   | Teste  |
|---------+--------|
| Alpha   | asl77  |
| Alpha   | asl81  |
| Alpha   | asl150 |
| Beta    | asl01  |
| Beta    | asl02  |
| Beta    | asl03  |
| Beta    | asl04  |
| Beta    | asl05  |
| Beta    | asl06  |
| Beta    | asl07  |
| Beta    | asl08  |
| Beta    | asl25  |
| Beta    | asl27  |
| Beta    | asl28  |
| Beta    | asl30  |
| Beta    | asl31  |
| Beta    | asl32  |
| Beta    | asl33  |
| Beta    | asl35  |
| Beta    | asl36  |
| Beta    | asl37  |
| Beta    | asl38  |
| Beta    | asl39  |
| Beta    | asl41  |
| Beta    | asl42  |
| Beta    | asl43  |
| Beta    | asl44  |
| Beta    | asl46  |
| Beta    | asl47  |
| Beta    | asl48  |
| Beta    | asl50  |
| Beta    | asl51  |
| Beta    | asl52  |
| Beta    | asl53  |
| Beta    | asl54  |
| Beta    | asl56  |
| Beta    | asl57  |
| Beta    | asl58  |
| Beta    | asl59  |
| Beta    | asl60  |
| Beta    | asl62  |
| Beta    | asl63  |
| Beta    | asl65  |
| Beta    | asl66  |
| Beta    | asl76  |
| Beta    | asl77  |
| Beta    | asl78  |
| Beta    | asl79  |
| Beta    | asl80  |
| Beta    | asl81  |
| Beta    | asl129 |
| Beta    | asl138 |
| Beta    | asl139 |
| Beta    | asl140 |
| Beta    | asl141 |
| Beta    | asl142 |
| Beta    | asl143 |
| Beta    | asl144 |
| Beta    | asl145 |
| Beta    | asl146 |
| Beta    | asl147 |
| Beta    | asl148 |
| Beta    | asl149 |
| Beta    | asl150 |
| Gamma   | asl31  |
| Gamma   | asl32  |
| Gamma   | asl52  |
| Gamma   | asl62  |
| Gamma   | asl63  |
| Gamma   | asl65  |
| Gamma   | asl66  |
| Gamma   | asl76  |
| Gamma   | asl77  |
| Gamma   | asl80  |
| Gamma   | asl81  |
| Gamma   | asl86  |
| Gamma   | asl129 |
| Iota    | asl26  |
| Iota    | asl53  |
| Iota    | asl54  |
| Iota    | asl81  |
| Iota    | asl83  |
| Iota    | asl87  |
| Iota    | asl114 |
| Iota    | asl125 |
| Kappa   | asl62  |
| Kappa   | asl63  |
| Kappa   | asl65  |
| Kappa   | asl66  |
| Kappa   | asl80  |
| Kappa   | asl81  |
| Kappa   | asl129 |
| Omega   | asl03  |
| Omega   | asl04  |
| Omega   | asl27  |
| Omega   | asl31  |
| Omega   | asl32  |
| Omega   | asl41  |
| Omega   | asl42  |
| Omega   | asl43  |
| Omega   | asl44  |
| Omega   | asl47  |
| Omega   | asl48  |
| Omega   | asl77  |
| Omega   | asl78  |
| Omega   | asl80  |
| Omega   | asl81  |
| Omega   | asl150 |
| Omicron | asl81  |
| Omicron | asl114 |
| Psi     | asl01  |
| Psi     | asl02  |
| Psi     | asl03  |
| Psi     | asl04  |
| Psi     | asl62  |
| Psi     | asl63  |
| Psi     | asl80  |
| Psi     | asl81  |
| Psi     | asl114 |
| Psi     | asl129 |
| Psi     | asl150 |
| Rho     | asl31  |
| Rho     | asl32  |
| Rho     | asl41  |
| Rho     | asl53  |
| Rho     | asl62  |
| Rho     | asl63  |
| Rho     | asl65  |
| Rho     | asl66  |
| Rho     | asl80  |
| Rho     | asl81  |
| Rho     | asl86  |
| Rho     | asl129 |
| Rho     | asl150 |
| Sigma   | asl62  |
| Sigma   | asl63  |
| Sigma   | asl65  |
| Sigma   | asl66  |
| Sigma   | asl80  |
| Sigma   | asl81  |
| Sigma   | asl129 |
| Sigma   | asl150 |
| Tau     | asl31  |
| Tau     | asl32  |
| Tau     | asl53  |
| Tau     | asl54  |
| Tau     | asl62  |
| Tau     | asl63  |
| Tau     | asl65  |
| Tau     | asl66  |
| Tau     | asl80  |
| Tau     | asl81  |
| Tau     | asl129 |
| Tau     | asl150 |
| Theta   | asl62  |
| Theta   | asl63  |
| Theta   | asl65  |
| Theta   | asl66  |
| Theta   | asl80  |
| Theta   | asl81  |
| Theta   | asl129 |
| Zeta    | asl31  |
| Zeta    | asl32  |
| Zeta    | asl62  |
| Zeta    | asl63  |
| Zeta    | asl65  |
| Zeta    | asl66  |
| Zeta    | asl80  |
| Zeta    | asl81  |
| Zeta    | asl129 |

** Notas Objetiva e Subjetiva

| Grupo   | Avaliacao | Nota |
|---------+-----------+------|
| Omicron | E2.S      | 9.73 |
| Zeta    | E2.S      |  9.7 |
| Omega   | E2.S      |  9.5 |
| Tau     | E2.S      |  9.5 |
| Kappa   | E2.S      |  9.4 |
| Alpha   | E2.S      |  9.2 |
| Beta    | E2.S      |  9.2 |
| Gamma   | E2.S      |  9.1 |
| Theta   | E2.S      |  9.1 |
| Sigma   | E2.S      |    9 |
| Iota    | E2.S      |  8.1 |
| Rho     | E2.S      |  7.9 |
| Psi     | E2.S      |  7.5 |
| Omicron | E2.O      |  9.9 |
| Zeta    | E2.O      |  9.4 |
| Omega   | E2.O      |  8.9 |
| Tau     | E2.O      |  9.2 |
| Kappa   | E2.O      |  9.5 |
| Alpha   | E2.O      |  9.8 |
| Beta    | E2.O      |  5.9 |
| Gamma   | E2.O      |  9.1 |
| Theta   | E2.O      |  9.5 |
| Sigma   | E2.O      |  9.5 |
| Iota    | E2.O      |  9.5 |
| Rho     | E2.O      |  9.1 |
| Psi     | E2.O      |  9.3 |

* Avaliação da Etapa 3                                             :noexport:
** Grupos que não entregaram até o prazo

| Grupo   |
|---------|
| Delta   |
| Epsilon |

** Entregas até o prazo

| Timestamp           | Grupo  |
|---------------------+--------|
| 2019-05-05 10:05:15 | Alpha  |
| 2019-05-05 21:42:51 | Beta   |
| 2019-05-06 00:58:01 | Lambda |

** Arquivos para testes                                             :ATTACH:
:PROPERTIES:
:Attachments: e3tests.tgz
:ID:       ba0a807b-4fbe-4439-b9bb-856ffedcf1bc
:END:

Veja [[./data/ba/0a807b-4fbe-4439-b9bb-856ffedcf1bc/e3tests.tgz][este arquivo]].

Todas as entradas estão sintaticamente corretas de acordo com E2. Os
arquivos que tem a string =DECL= em um comentário C99 são aqueles que
permitem que a saída de descompilação seja vazia.

** Comentários por grupo
*** Alpha

- [X] 1. Associação de valor ao =token= (com o uso de =yylval=)
  - Fez somente para literais e identificadores
  - Deixou a criação dos nós da AST no bison
  - Fez o esquema para lidar com os escapados (esquema da contrabarra
    de coisa desconhecida)
  - strdup de tokens identificadores
- [X] 2. Implementação de uma estrutura de dados em árvore
  - okay, com uma estrutura que segue a filosofia de classes
  - com funções de alocação e de libera memória, com descompila
- [X] 3. Ações /bison/ para construção da AST
- [X] 4. Descompilar o programa de entrada
- [X] 5. Remoção de conflitos/ajustes gramaticais
- [X] 6. Gerenciar corretamente a memória do compilador
  - Se preocupou pois as funções de libera, mas não executou valgrind
  - Fizemos um teste em laboratório e apareceram inúmeros erros do valgrind
  - *Se valgrind é desconsiderado, a nota objetiva fica em 9.8*
    - Testes que falham com segfault: asl59 (continue) e asl60 (break)

printf para imprimir a árvore
- ast.c, em comandos simples, em expressão, na raiz

- [ ] =local.tests/e2/input/asl01= NOK     
  - Erro: valgrind leak report ( 8 0 0 16461 0 )
- [ ] =local.tests/e2/input/asl02= NOK     
  - Erro: valgrind leak report ( 8 0 0 16461 0 )
- [ ] =local.tests/e2/input/asl03= NOK     
  - Erro: valgrind leak report ( 11 0 0 16458 0 )
- [ ] =local.tests/e2/input/asl04= NOK     
  - Erro: valgrind leak report ( 11 0 0 16458 0 )
- [ ] =local.tests/e2/input/asl05= NOK     
  - Erro: valgrind leak report ( 8 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl06= NOK     
  - Erro: valgrind leak report ( 8 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl07= NOK     
  - Erro: valgrind leak report ( 8 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl08= NOK     
  - Erro: valgrind leak report ( 8 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl25= NOK     
  - Erro: valgrind leak report ( 8 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl27= NOK     
  - Erro: valgrind leak report ( 8 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl28= NOK     
  - Erro: valgrind leak report ( 12 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl30= NOK     
  - Erro: valgrind leak report ( 10 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl31= NOK     
  - Erro: valgrind leak report ( 8 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl32= NOK     
  - Erro: valgrind leak report ( 8 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl33= NOK     
  - Erro: valgrind leak report ( 10 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl35= NOK     
  - Erro: valgrind leak report ( 10 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl36= NOK     
  - Erro: valgrind leak report ( 10 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl37= NOK     
  - Erro: valgrind leak report ( 10 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl38= NOK     
  - Erro: valgrind leak report ( 10 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl39= NOK     
  - Erro: valgrind leak report ( 10 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl41= NOK     
  - Erro: valgrind leak report ( 10 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl42= NOK     
  - Erro: valgrind leak report ( 10 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl43= NOK     
  - Erro: valgrind leak report ( 12 0 0 16458 0 )
- [ ] =local.tests/e2/input/asl44= NOK     
  - Erro: valgrind leak report ( 14 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl46= NOK     
  - Erro: valgrind leak report ( 14 0 0 16458 0 )
- [ ] =local.tests/e2/input/asl47= NOK     
  - Erro: valgrind leak report ( 22 0 0 16458 0 )
- [ ] =local.tests/e2/input/asl48= NOK     
  - Erro: valgrind leak report ( 30 0 0 16458 0 )
- [ ] =local.tests/e2/input/asl50= NOK     
  - Erro: valgrind leak report ( 12 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl51= NOK     
  - Erro: valgrind leak report ( 16 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl52= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl53= NOK     
  - Erro: valgrind leak report ( 10 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl54= NOK     
  - Erro: valgrind leak report ( 22 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl56= NOK     
  - Erro: valgrind leak report ( 14 0 0 16458 0 )
- [ ] =local.tests/e2/input/asl57= NOK     
  - Erro: valgrind leak report ( 14 0 0 16458 0 )
- [ ] =local.tests/e2/input/asl58= NOK     
  - Erro: valgrind leak report ( 12 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl59= NOK 
  - Erro: descompilações são diferentes 
  - Erro: primeiro descompila não funcionou (139)   
  - Erro: valgrind leak report ( 0 0 0 20684 0 )
- [ ] =local.tests/e2/input/asl60= NOK 
  - Erro: descompilações são diferentes 
  - Erro: primeiro descompila não funcionou (139)   
  - Erro: valgrind leak report ( 0 0 0 20684 0 )
- [ ] =local.tests/e2/input/asl62= NOK     
  - Erro: valgrind leak report ( 12 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl63= NOK     
  - Erro: valgrind leak report ( 12 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl65= NOK     
  - Erro: valgrind leak report ( 26 0 0 16458 0 )
- [ ] =local.tests/e2/input/asl66= NOK     
  - Erro: valgrind leak report ( 16 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl76= NOK     
  - Erro: valgrind leak report ( 22 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl77= NOK     
  - Erro: valgrind leak report ( 16 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl78= NOK     
  - Erro: valgrind leak report ( 18 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl79= NOK     
  - Erro: valgrind leak report ( 16 0 0 16460 0 )
- [ ] =local.tests/e2/input/asl80= NOK     
  - Erro: valgrind leak report ( 16 0 0 16458 0 )
- [ ] =local.tests/e2/input/asl81= NOK     
  - Erro: valgrind leak report ( 47 0 0 16461 0 )
- [ ] =local.tests/e3/i_e3_001.ptg= NOK     
  - Erro: valgrind leak report ( 8 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_002.ptg= NOK     
  - Erro: valgrind leak report ( 8 0 0 16462 0 )
- [ ] =local.tests/e3/i_e3_003.ptg= NOK     
  - Erro: valgrind leak report ( 30 0 0 16461 0 )
- [ ] =local.tests/e3/i_e3_004.ptg= NOK     
  - Erro: valgrind leak report ( 8 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_005.ptg= NOK     
  - Erro: valgrind leak report ( 14 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_006.ptg= NOK     
  - Erro: valgrind leak report ( 10 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_008.ptg= NOK     
  - Erro: valgrind leak report ( 10 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_009.ptg= NOK     
  - Erro: valgrind leak report ( 12 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_010.ptg= NOK     
  - Erro: valgrind leak report ( 14 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_011.ptg= NOK     
  - Erro: valgrind leak report ( 14 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_012.ptg= NOK     
  - Erro: valgrind leak report ( 10 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_013.ptg= NOK     
  - Erro: valgrind leak report ( 10 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_014.ptg= NOK     
  - Erro: valgrind leak report ( 60 0 0 16464 0 )
- [ ] =local.tests/e3/i_e3_015.ptg= NOK     
  - Erro: valgrind leak report ( 18 0 0 16464 0 )
- [ ] =local.tests/e3/i_e3_016.ptg= NOK     
  - Erro: valgrind leak report ( 18 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_017.ptg= NOK     
  - Erro: valgrind leak report ( 18 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_018.ptg= NOK     
  - Erro: valgrind leak report ( 28 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_019.ptg= NOK     
  - Erro: valgrind leak report ( 14 0 4 16458 0 )
- [ ] =local.tests/e3/i_e3_020.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_021.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_022.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_023.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_024.ptg= NOK     
  - Erro: valgrind leak report ( 16 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_025.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_026.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_027.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_028.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_029.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_030.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_031.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_032.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_033.ptg= NOK     
  - Erro: valgrind leak report ( 16 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_034.ptg= NOK     
  - Erro: valgrind leak report ( 34 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_035.ptg= NOK     
  - Erro: valgrind leak report ( 34 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_036.ptg= NOK     
  - Erro: valgrind leak report ( 20 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_037.ptg= NOK     
  - Erro: valgrind leak report ( 24 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_038.ptg= NOK     
  - Erro: valgrind leak report ( 28 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_039.ptg= NOK     
  - Erro: valgrind leak report ( 28 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_040.ptg= NOK     
  - Erro: valgrind leak report ( 72 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_041.ptg= NOK     
  - Erro: valgrind leak report ( 72 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_042.ptg= NOK     
  - Erro: valgrind leak report ( 80 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_043.ptg= NOK     
  - Erro: valgrind leak report ( 150 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_044.ptg= NOK     
  - Erro: valgrind leak report ( 135 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_045.ptg= NOK     
  - Erro: valgrind leak report ( 210 0 0 16460 0 )
- [ ] =local.tests/e3/i_e3_046.ptg= NOK     
  - Erro: valgrind leak report ( 179 0 0 16463 0 )
- [ ] =local.tests/e3/i_e3_047.ptg= NOK     
  - Erro: valgrind leak report ( 127 0 0 16465 0 )
- [ ] =local.tests/e3/i_e3_048.ptg= NOK     
  - Erro: valgrind leak report ( 102 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_049.ptg= NOK     
  - Erro: valgrind leak report ( 441 0 0 16458 0 )
- [ ] =local.tests/e3/i_e3_050.ptg= NOK     
  - Erro: valgrind leak report ( 41 0 0 16458 0 )

*Prazo para correção dos problemas do valgrind:*
- 19/05
- [X] Correções entregues no dia 20/05

*** Lambda

- [X] 1. Associação de valor ao =token= (com o uso de =yylval=)
  - Fez somente para literais e identificador (os demais não faz
    sentido fazer pois a AST não os usa na análise sintática)
  - Tirou as aspas, aspinhas    
- [X] 2. Implementação de uma estrutura de dados em árvore
- [X] 3. Ações /bison/ para construção da AST
  - Tem apenas duas funções para cria a árvore (~cria_nodo~ e ~concatena~)
- [X] 4. Descompilar o programa de entrada
- [X] 5. Remoção de conflitos/ajustes gramaticais
- [ ] 6. Gerenciar corretamente a memória do compilador
  - Implementou a função mas não testou com valgrind
  - Fizemos um teste em laboratório e apareceram erros do valgrind

*** Beta

- [X] 1. Associação de valor ao =token= (com o uso de =yylval=)
  - Fizeram uma estrutura de dados para todos os tokens
  - Tira valores escapados (não todos, menos os bizarros do Escape Sequences in C)
- [X] 2. Implementação de uma estrutura de dados em árvore
  - tree.c, tree.h
  - Solução elegante com enum, com funções de create e free
- [X] 3. Ações /bison/ para construção da AST
  - ~create_node_*~
  - Colocou parenteses em tudo para verificar adequação da AST
- [X] 4. Descompilar o programa de entrada
  - ~print_node~ com separador
- [X] 5. Remoção de conflitos/ajustes gramaticais
- [X] 6. Gerenciar corretamente a memória do compilador

# printf("%p -- %p;", no1, no2);

*** Delta

Não entregou até o prazo estabelecido.
Entregará até o dia 19/05 conforme combinado em aula do dia 08/05.

Entregou no dia 21/05.
- Foi realizada apenas a avaliação automática.

*** Epsilon

Não entregou. Não veio na aula.

** Notas Objetiva e Subjetiva

O grupo ~Delta~ entregou com atraso.

| Grupo  | E3.O | E3.S |
|--------+------+------|
| Alpha  |   10 |  9.5 |
| Beta   |   10 |   10 |
| Delta  |   10 |    0 |
| Lambda |   10 |  9.5 |

* Avaliação da Etapa 4                                             :noexport:
** Grupos que não entregaram até o prazo

| Grupo |
|-------|
| Alpha |
| Delta |

** Entregas até o prazo

| Grupo  |
|--------|
| Beta   |
| Lambda |

** Arquivos para testes                                             :ATTACH:
:PROPERTIES:
:ID:       85c73ba8-bb05-4ee2-b0b9-0146bf9ec026
:Attachments: e4tests.tgz
:END:

Veja [[./data/85/c73ba8-bb05-4ee2-b0b9-0146bf9ec026/e4tests.tgz][este arquivo]].

Todas as entradas estão sintaticamente corretas de acordo com E2. Os
arquivos que contém um comentário que começa por =ERR_= são considerados
errados. Na ausência, assume-se que a entrada está léxica, sintática e
semanticamente correta e portanto o compilador deve retornar 0. Para
saber quais os erros esperados por teste, consultar a tabela abaixo:

| Test    | Erro                 |
|---------+----------------------|
| poi01   |                      |
| poi02   |                      |
| poi03   |                      |
| poi04   | ~ERR_UNDECLARED~       |
| poi05   | ~ERR_UNDECLARED~       |
| poi06   | ~ERR_UNDECLARED~       |
| poi07   | ~ERR_DECLARED~         |
| poi08   | ~ERR_DECLARED~         |
| poi09   | ~ERR_DECLARED~         |
| poi10   | ~ERR_DECLARED~         |
| poi11   |                      |
| poi12   | ~ERR_VARIABLE~         |
| poi13   | ~ERR_VECTOR~           |
| poi14   | ~ERR_FUNCTION~         |
| poi15   |                      |
| poi17   | ~ERR_STRING_TO_X~      |
| poi18   | ~ERR_CHAR_TO_X~        |
| poi21   | ~ERR_CHAR_TO_X~        |
| poi22   | ~ERR_STRING_TO_X~      |
| poi24   |                      |
| poi25   | ~ERR_MISSING_ARGS~     |
| poi26   | ~ERR_EXCESS_ARGS~      |
| poi27   | ~ERR_WRONG_TYPE_ARGS~  |
| poi28   | ~ERR_DECLARED~         |
| poi29   |                      |
| poi30   |                      |
| poi31   |                      |
| poi32   |                      |
| poi33   |                      |
| poi35   | ~ERR_WRONG_PAR_INPUT~  |
| poi36   | ~ERR_WRONG_PAR_INPUT~  |
| poi37   | ~ERR_WRONG_PAR_INPUT~  |
| poi38   | ~ERR_WRONG_PAR_INPUT~  |
| poi39   | ~ERR_WRONG_PAR_INPUT~  |
| poi40   | ~ERR_WRONG_PAR_INPUT~  |
| poi41   |                      |
| poi42   | ~ERR_WRONG_PAR_OUTPUT~ |
| poi43   |                      |
| poi44   |                      |
| poi45   |                      |
| poi46   | ~ERR_FUNCTION~         |
| poi47   |                      |
| poi48   |                      |
| poi49   |                      |
| poi50   | ~ERR_WRONG_PAR_RETURN~ |
| poi51   |                      |
| qwe01   |                      |
| qwe02   | ~ERR_UNDECLARED~       |
| qwe03   |                      |
| qwe04   |                      |
| qwe05   |                      |
| qwe06   | ~ERR_UNDECLARED~       |
| qwe07   |                      |
| qwe08   | ~ERR_DECLARED~         |
| qwe09   | ~ERR_DECLARED~         |
| qwe10   |                      |
| qwe11   | ~ERR_VECTOR~           |
| qwe12   | ~ERR_VARIABLE~         |
| qwe13   | ~ERR_FUNCTION~         |
| qwe14   | ~ERR_VARIABLE~         |
| qwe15   | ~ERR_VECTOR~           |
| qwe18   |                      |
| qwe19   | ~ERR_MISSING_ARGS~     |
| qwe20   | ~ERR_EXCESS_ARGS~      |
| qwe21   | ~ERR_WRONG_TYPE_ARGS~  |
| s00.iks | ~ERR_UNDECLARED~       |
| s01.iks | ~ERR_UNDECLARED~       |
| s02.iks | ~ERR_UNDECLARED~       |
| s03.iks | ~ERR_DECLARED~         |
| s04.iks | ~ERR_DECLARED~         |
| s05.iks | ~ERR_VARIABLE~         |
| s06.iks | ~ERR_VECTOR~           |
| s07.iks | ~ERR_FUNCTION~         |
| s08.iks | ~ERR_STRING_TO_X~      |
| s09.iks | ~ERR_CHAR_TO_X~        |
| s10.iks | ~ERR_MISSING_ARGS~     |
| s11.iks | ~ERR_EXCESS_ARGS~      |
| s12.iks | ~ERR_WRONG_TYPE_ARGS~  |
| s13.iks | ~ERR_WRONG_TYPE_ARGS~  |
| s14.iks | ~ERR_WRONG_PAR_INPUT~  |
| s15.iks | ~ERR_WRONG_PAR_OUTPUT~ |
| s16.iks | ~ERR_WRONG_PAR_RETURN~ |
| s17.iks | ~ERR_STRING_TO_X~      |
| s18.iks | ~ERR_CHAR_TO_X~        |
| s19.iks | ~ERR_WRONG_TYPE~       |
| s20.iks | ~ERR_WRONG_TYPE~       |
| s21.iks | ~ERR_WRONG_TYPE~       |
| s22.iks | ~ERR_WRONG_TYPE~       |
| s23.iks | ~ERR_STRING_TO_X~      |
| s24.iks | ~ERR_CHAR_TO_X~        |
| s25.iks |                      |
| s26.iks | ~ERR_CHAR_TO_X~        |
| s27.iks | ~ERR_STRING_TO_X~      |
| s28.iks | ~ERR_STRING_TO_X~      |
| s29.iks | ~ERR_CHAR_TO_X~        |
| s30.iks | ~ERR_WRONG_PAR_RETURN~ |
| s31.iks |                      |
| s32.iks | ~ERR_UNDECLARED~       |
| s35.iks |                      |
| s36.iks | ~ERR_DECLARED~         |
| s37.iks |                      |
| s38.iks | ~ERR_STRING_TO_X~      |
| s39.iks | ~ERR_UNDECLARED~       |
| s40.iks |                      |

** Log de execução dos testes                                       :ATTACH:
:PROPERTIES:
:Attachments: e4v0.log e4v1.log
:ID:       4a7b2831-ec48-4877-900b-4365d8ea77df
:END:

Veja o [[./data/4a/7b2831-ec48-4877-900b-4365d8ea77df/e4v0.log]].

Veja (recuperação) o [[./data/4a/7b2831-ec48-4877-900b-4365d8ea77df/e4v1.log]].

** Comentários por grupos
*** Explicações sobre a saída valgrind

Quando o valgrind relata:

#+BEGIN_EXAMPLE
==19028==    definitely lost: 73,480 bytes in 2 blocks
==19028==    indirectly lost: 0 bytes in 0 blocks
==19028==      possibly lost: 0 bytes in 0 blocks
==19028==    still reachable: 163,542 bytes in 14 blocks
==19028==         suppressed: 0 bytes in 0 blocks
#+END_EXAMPLE

gera-se uma chave =( 73480 0 0 163542 0 )=. Levando-se isso em conta,
todos os testes foram verificados com o valgrind. Para aqueles onde
nada é relatado (veja os comentários abaixo, por grupo), o somatório
dos números foi 0. Uma exceção existe para os que não chamam
=yy_destroy()=. Neste caso, o valor do somatório pode ser 16458 que o
/warning/ do valgrind é omitido.

*Nota:* O valgrind não foi utilizado nas resubmissões.
*** Comentários
**** Beta

15:36

- [X] 1. Implementar uma tabela de símbolos
  - Pilha de escopos que são push/pop no abre { e fecha } (~scope_stack~)
  - Tabela okay, mas é um vetor de ponteiros
- [X] 2. Verificação de declarações
  - Função ~identifier_in_scope~ (procura no próprio escopo)
  - Função ~identifier_in_stack~ (procura na pilha de escopos)
    #+BEGIN_SRC C
    x string;
    int main(){
      int x;
      x = 10;
    }
    #+END_SRC
- [X] 3. Uso correto de identificadores
  - Pela natureza do elemento
- [X] 4. Verificação de tipos (na AST) e tamanho dos dados
  - No nó ~node~ tem um campo ~val_type~
  - Tem uma função ~type_infer~ para operações binárias
- [X] 5. Argumentos e parâmetros de funções
  - Não está pedindo para verificar ~const~
  - Função ~match_decl_with_call~
    - Chamada dupla no if da regra cuja cabeça é o ~c_call_func~.
    - Faltou uma função para retonar a compatibilidade (sim ou não)
      entre dois tipos
  - Retorno da função ~c_return~ tem uma cópia do código
- [X] 6. Verificação de tipos em comandos
  - Usa o um ~NODE_TYPE_VAR_ACCESS~ (nó da AST)

**** Lambda

15:37

Verificações semânticas são feitas sobre a AST,
e não mais no bison (caracterizando duas passagens).

- [X] 1. Implementar uma tabela de símbolos
  - Ponteiro para o escopo superior (o englobando)
  - Funciona para escopo aninhado sem funções
- [X] 2. Verificação de declarações
  - Análise da declaração
  - ~busca_entrada_na_lista~ busca somente em um escopo
  - ~consulta_tabela~ navega na lista de tabelas
- [X] 3. Uso correto de identificadores
- [X] 4. Verificação de tipos (na AST) e tamanho dos dados
  - Função ~infere_tipo~
- [X] 5. Argumentos e parâmetros de funções
- [X] 6. Verificação de tipos em comandos
  - Usa variável global ~tipo_retorno~

Não está perseguindo valgrind.
- Teste indicou várias leituras inválidas

**** Alpha

16:14

Não entregou. Entregar até 31/05.

- [X] 1. Implementar uma tabela de símbolos
  - Tem um ~enum sym_type~ que é uma versão de natureza
  - Campo ~siblings~ para guardar parâmetros formais de função
  - Funções que operam com tabela e pilha de tabelas
    - Chamadas efetuadas
- [/] 2. Verificação de declarações
- [/] 3. Uso correto de identificadores
- [ ] 4. Verificação de tipos (na AST) e tamanho dos dados
- [ ] 5. Argumentos e parâmetros de funções
- [ ] 6. Verificação de tipos em comandos

Disponibilidade para explicar fora do horário.

Entregou em 28/05.

**** Delta

16:47

Não entregou. Entregar até 27/05.

- [/] 1. Implementar uma tabela de símbolos
  - Só tem uma tabela global (declarado ou não declarado)
  - Bem estruturada a questão da tabela e da pilha, mas a criação de
    tabelas de símbolo por escopo ainda não realizada, mas por simples
    falta de chamadas no local correto da gramática
- [/] 2. Verificação de declarações
  - Implementou escopo único
- [ ] 3. Uso correto de identificadores
- [ ] 4. Verificação de tipos (na AST) e tamanho dos dados
- [ ] 5. Argumentos e parâmetros de funções
  - Está guardando na tabela os parâmetros formais
  - Nenhuma verificação com argumentos (parâmetros reais)
- [ ] 6. Verificação de tipos em comandos

Entregou em 10/06.

** Notas Objetiva e Subjetiva

Os grupos não listados na tabela abaixo não submeteram.

| Grupo  | E4.O | E4.S |
|--------+------+------|
| Alpha  | 9.71 |    4 |
| Beta   | 9.23 |    9 |
| Delta  | 9.04 |    3 |
| Lambda | 8.27 |    9 |

* Avaliação da Etapa 5                                             :noexport:
** Grupos que não entregaram até o prazo

| Grupo   | ID     |
|---------+--------|
| Delta   | ???103 |
| Epsilon | ???369 |
| Alpha   | ???782 |

** Entregas até o prazo

| Timestamp           | Grupo  |
|---------------------+--------|
| 2019-06-09 16:23:31 | Lambda |
| 2019-06-09 23:56:28 | Beta   |

** Entregas em recuperação/atraso

Entregas até 23/06
- Delta
- Alpha

** Arquivos para testes                                             :ATTACH:
:PROPERTIES:
:Attachments: e5tests.tgz
:ID:       fc3383b2-9293-42da-9563-19b3229a3cc1
:END:

Veja [[data/fc/3383b2-9293-42da-9563-19b3229a3cc1/e5tests.tgz][este arquivo]].

Todas as entradas estão lexicalmente, sintaticamente e semântica
corretas de acordo com as etapas anteriores. A tabela abaixo demonstra
a localização dos valores na memória ao final do programa, assumindo
que os endereços de deslocamento se referem a base da pilha (=Stack=) ou
do segmento de dados (=Data=).

| Test  | Type  | Address | Value |
|-------+-------+---------+-------|
| ijk00 | Stack |       0 |   923 |
| ijk01 | Stack |       8 |   923 |
| ijk02 | Data  |       0 |   923 |
| ijk03 | Data  |       8 |   923 |
| ijk04 | Stack |       0 |    30 |
| ijk04 | Stack |       4 |    46 |
| ijk04 | Stack |       8 |    76 |
| ijk05 | Stack |       0 |    -2 |
| ijk05 | Stack |       4 |   -18 |
| ijk05 | Stack |       8 |    16 |
| ijk06 | Stack |       0 |    25 |
| ijk06 | Stack |       4 |     5 |
| ijk06 | Stack |       8 |     5 |
| ijk07 | Stack |       0 |    45 |
| ijk07 | Stack |       4 |   135 |
| ijk07 | Stack |       8 |  6075 |
| ijk08 | Stack |       0 |    55 |
| ijk08 | Stack |       4 |    15 |
| ijk08 | Stack |       8 |     3 |
| ijk09 | Stack |       0 |    46 |
| ijk09 | Stack |       4 |    15 |
| ijk09 | Stack |       8 |     3 |
| ijk10 | Stack |       0 |   300 |
| ijk10 | Stack |       4 |   400 |
| ijk10 | Stack |       8 |     2 |
| ijk11 | Stack |       0 |   800 |
| ijk11 | Stack |       4 |   400 |
| ijk11 | Stack |       8 |     2 |
| ijk12 | Stack |       0 |    20 |
| ijk13 | Stack |       0 |     2 |
| ijk14 | Stack |       0 |   393 |
| ijk14 | Stack |       4 |   393 |
| ijk15 | Stack |       0 |     1 |
| ijk15 | Stack |       4 |   393 |
| ijk16 | Stack |       0 |     1 |
| ijk16 | Stack |       4 |   393 |
| ijk17 | Stack |       0 |     5 |
| ijk18 | Stack |       0 |     5 |
| ijk19 | Stack |       0 |     0 |
| ijk19 | Stack |       4 |     1 |
| ijk19 | Stack |       8 |     2 |
| ijk19 | Stack |      12 |     3 |
| ijk19 | Stack |      16 |   293 |
| ijk20 | Stack |       0 |     1 |
| ijk20 | Stack |       4 |     0 |
| ijk20 | Stack |       8 |     2 |
| ijk20 | Stack |      12 |     3 |
| ijk20 | Stack |      16 |   325 |

** Log dos testes automáticos                                       :ATTACH:
:PROPERTIES:
:ID:       9dfd58b9-fec8-4d82-acd9-dfafbd178328
:Attachments: e5v0.log e5v1.log
:END:

Consulte [[./data/9d/fd58b9-fec8-4d82-acd9-dfafbd178328/e5v0.log][o arquivo de log e5v0]] e [[./data/9d/fd58b9-fec8-4d82-acd9-dfafbd178328/e5v1.log][o arquivo de log e5v1]]
para obter os resultados elementares (/raw/)
dos testes automáticos. Cada linha começa pelo nome do grupo, sendo
que o separador é a barra vertical. A segunda coluna é o identificador
do teste, e a terceira coluna pode ser =stack=, =data=, =input=, =output=,
=memory= e =instruction=. Quando for =stack= e =data=, a quarta coluna indica
a base desses segmentos. Quando for =input=, a quarta coluna contém a
entrada fornecida pelo grupo (a saída do processo de compilação) para
o simulador ILOC. Quando for =output=, a quarta coluna contém a saída do
simulador ILOC. Quando for =memory=, a quarta coluna contém endereços e
valores da memória ao fim da simulação. E, enfim, quando for
=instruction=, a quarta coluna conterá as estatísticas das instruções
executadas (quantidade, instrução). É a partir deste arquivo que é
definida a tabela abaixo.

** Testes automáticos

A tabela abaixo mostra os resultados dos testes
automáticos, considerando as entradas do arquivos para testes.  A
coluna =Group= e =Test= identificam o grupo e o identificador do teste; a
coluna =Address= indica o endereço de memória onde o valor =Value.y= deve
ser registrado para o teste ser considerado certo. A coluna =Eval= é
assinalada =TRUE= (correta) quando o valor da coluna =Value.x=, registrado
no endereço pelo código ILOC emitido pelo grupo, for idêntico ao valor
em =Value.y= esperado. Os endereços da pilha e da base foram definidos
de maneira aleatória por teste. Somente aparecem aqueles testes onde a
solução do grupo fornece algum código ILOC válido na saída.

| Group  | Test  | Address | Value.x | Value.y | Eval  |
|--------+-------+---------+---------+---------+-------|
| Beta   | ijk00 |   28080 |     923 |     923 | TRUE  |
| Beta   | ijk01 |   28244 |     923 |     923 | TRUE  |
| Beta   | ijk02 |   16290 |     923 |     923 | TRUE  |
| Beta   | ijk03 |   19320 |     923 |     923 | TRUE  |
| Beta   | ijk04 |   21706 |      30 |      30 | TRUE  |
| Beta   | ijk04 |   21710 |      46 |      46 | TRUE  |
| Beta   | ijk04 |   21714 |      76 |      76 | TRUE  |
| Beta   | ijk05 |   13847 |      -2 |      -2 | TRUE  |
| Beta   | ijk05 |   13851 |     -18 |     -18 | TRUE  |
| Beta   | ijk05 |   13855 |      16 |      16 | TRUE  |
| Beta   | ijk06 |   28955 |      25 |      25 | TRUE  |
| Beta   | ijk06 |   28959 |       5 |       5 | TRUE  |
| Beta   | ijk06 |   28963 |       5 |       5 | TRUE  |
| Beta   | ijk07 |   21886 |      45 |      45 | TRUE  |
| Beta   | ijk07 |   21890 |     135 |     135 | TRUE  |
| Beta   | ijk07 |   21894 |    6075 |    6075 | TRUE  |
| Beta   | ijk08 |   24742 |      55 |      55 | TRUE  |
| Beta   | ijk08 |   24746 |      15 |      15 | TRUE  |
| Beta   | ijk08 |   24750 |       3 |       3 | TRUE  |
| Beta   | ijk09 |   34934 |      46 |      46 | TRUE  |
| Beta   | ijk09 |   34938 |      15 |      15 | TRUE  |
| Beta   | ijk09 |   34942 |       3 |       3 | TRUE  |
| Beta   | ijk10 |   11505 |     300 |     300 | TRUE  |
| Beta   | ijk10 |   11509 |     400 |     400 | TRUE  |
| Beta   | ijk10 |   11513 |       2 |       2 | TRUE  |
| Beta   | ijk11 |   14130 |     800 |     800 | TRUE  |
| Beta   | ijk11 |   14134 |     400 |     400 | TRUE  |
| Beta   | ijk11 |   14138 |       2 |       2 | TRUE  |
| Beta   | ijk12 |   26794 |      20 |      20 | TRUE  |
| Beta   | ijk13 |   17436 |       2 |       2 | TRUE  |
| Beta   | ijk14 |   22975 |     393 |     393 | TRUE  |
| Beta   | ijk14 |   22979 |     393 |     393 | TRUE  |
| Beta   | ijk15 |   12596 |       1 |       1 | TRUE  |
| Beta   | ijk15 |   12600 |     393 |     393 | TRUE  |
| Beta   | ijk16 |   32737 |       1 |       1 | TRUE  |
| Beta   | ijk16 |   32741 |     393 |     393 | TRUE  |
| Beta   | ijk17 |   20666 |       5 |       5 | TRUE  |
| Beta   | ijk18 |   40839 |       5 |       5 | TRUE  |
| Beta   | ijk19 |   12498 |       0 |       0 | TRUE  |
| Beta   | ijk19 |   12502 |       1 |       1 | TRUE  |
| Beta   | ijk19 |   12506 |       2 |       2 | TRUE  |
| Beta   | ijk19 |   12510 |       3 |       3 | TRUE  |
| Beta   | ijk19 |   12514 |     293 |     293 | TRUE  |
| Beta   | ijk20 |   28261 |       1 |       1 | TRUE  |
| Beta   | ijk20 |   28265 |       0 |       0 | TRUE  |
| Beta   | ijk20 |   28269 |       2 |       2 | TRUE  |
| Beta   | ijk20 |   28273 |       3 |       3 | TRUE  |
| Beta   | ijk20 |   28277 |     325 |     325 | TRUE  |
| Lambda | ijk00 |   35303 |     923 |     923 | TRUE  |
| Lambda | ijk01 |   30330 |     923 |     923 | TRUE  |
| Lambda | ijk02 |   12576 |     923 |     923 | TRUE  |
| Lambda | ijk03 |   20419 |     923 |     923 | TRUE  |
| Lambda | ijk04 |   41613 |      30 |      30 | TRUE  |
| Lambda | ijk04 |   41617 |      46 |      46 | TRUE  |
| Lambda | ijk04 |   41621 |      76 |      76 | TRUE  |
| Lambda | ijk05 |   38499 |      -2 |      -2 | TRUE  |
| Lambda | ijk05 |   38503 |     -18 |     -18 | TRUE  |
| Lambda | ijk05 |   38507 |      16 |      16 | TRUE  |
| Lambda | ijk06 |   23368 |      25 |      25 | TRUE  |
| Lambda | ijk06 |   23372 |       5 |       5 | TRUE  |
| Lambda | ijk06 |   23376 |       5 |       5 | TRUE  |
| Lambda | ijk07 |   10138 |      45 |      45 | TRUE  |
| Lambda | ijk07 |   10142 |     135 |     135 | TRUE  |
| Lambda | ijk07 |   10146 |    6075 |    6075 | TRUE  |
| Lambda | ijk08 |   19423 |      55 |      55 | TRUE  |
| Lambda | ijk08 |   19427 |      15 |      15 | TRUE  |
| Lambda | ijk08 |   19431 |       3 |       3 | TRUE  |
| Lambda | ijk09 |   26060 |      46 |      46 | TRUE  |
| Lambda | ijk09 |   26064 |      15 |      15 | TRUE  |
| Lambda | ijk09 |   26068 |       3 |       3 | TRUE  |
| Lambda | ijk10 |   30236 |     300 |     300 | TRUE  |
| Lambda | ijk10 |   30240 |     400 |     400 | TRUE  |
| Lambda | ijk10 |   30244 |       2 |       2 | TRUE  |
| Lambda | ijk11 |   22985 |     800 |     800 | TRUE  |
| Lambda | ijk11 |   22989 |     400 |     400 | TRUE  |
| Lambda | ijk11 |   22993 |       2 |       2 | TRUE  |
| Lambda | ijk12 |   26454 |      20 |      20 | TRUE  |
| Lambda | ijk13 |   30378 |       2 |       2 | TRUE  |
| Lambda | ijk14 |   27041 |     393 |     393 | TRUE  |
| Lambda | ijk14 |   27045 |     393 |     393 | TRUE  |
| Lambda | ijk15 |   42555 |       1 |       1 | TRUE  |
| Lambda | ijk15 |   42559 |     393 |     393 | TRUE  |
| Lambda | ijk16 |   13059 |       1 |       1 | TRUE  |
| Lambda | ijk16 |   13063 |     393 |     393 | TRUE  |
| Lambda | ijk17 |   11126 |       5 |       5 | TRUE  |
| Lambda | ijk18 |   34464 |       5 |       5 | TRUE  |
| Lambda | ijk19 |   18607 |       0 |       0 | TRUE  |
| Lambda | ijk19 |   18611 |       1 |       1 | TRUE  |
| Lambda | ijk19 |   18615 |       2 |       2 | TRUE  |
| Lambda | ijk19 |   18619 |       3 |       3 | TRUE  |
| Lambda | ijk19 |   18623 |     293 |     293 | TRUE  |
| Lambda | ijk20 |   10693 |       1 |       1 | TRUE  |
| Lambda | ijk20 |   10697 |       0 |       0 | TRUE  |
| Lambda | ijk20 |   10701 |       2 |       2 | TRUE  |
| Lambda | ijk20 |   10705 |       3 |       3 | TRUE  |
| Lambda | ijk20 |   10709 |     325 |     325 | TRUE  |
| Alpha  | ijk00 |   34351 |     923 |     923 | TRUE  |
| Alpha  | ijk01 |   20783 |     923 |     923 | TRUE  |
| Alpha  | ijk02 |   15141 |     923 |     923 | TRUE  |
| Alpha  | ijk03 |   11489 |     923 |     923 | TRUE  |
| Alpha  | ijk04 |   20318 |      30 |      30 | TRUE  |
| Alpha  | ijk04 |   20322 |      46 |      46 | TRUE  |
| Alpha  | ijk04 |   20326 |      76 |      76 | TRUE  |
| Alpha  | ijk05 |   24086 |      -2 |      -2 | TRUE  |
| Alpha  | ijk05 |   24090 |     -18 |     -18 | TRUE  |
| Alpha  | ijk05 |   24094 |      16 |      16 | TRUE  |
| Alpha  | ijk06 |   37812 |      25 |      25 | TRUE  |
| Alpha  | ijk06 |   37816 |       5 |       5 | TRUE  |
| Alpha  | ijk06 |   37820 |       5 |       5 | TRUE  |
| Alpha  | ijk07 |   19070 |      45 |      45 | TRUE  |
| Alpha  | ijk07 |   19074 |     135 |     135 | TRUE  |
| Alpha  | ijk07 |   19078 |    6075 |    6075 | TRUE  |
| Alpha  | ijk08 |   12897 |     235 |      55 | FALSE |
| Alpha  | ijk08 |   12901 |      15 |      15 | TRUE  |
| Alpha  | ijk08 |   12905 |       3 |       3 | TRUE  |
| Alpha  | ijk09 |   42299 |      46 |      46 | TRUE  |
| Alpha  | ijk09 |   42303 |      15 |      15 | TRUE  |
| Alpha  | ijk09 |   42307 |       3 |       3 | TRUE  |
| Alpha  | ijk10 |   33390 |     150 |     300 | FALSE |
| Alpha  | ijk10 |   33394 |     400 |     400 | TRUE  |
| Alpha  | ijk10 |   33398 |       2 |       2 | TRUE  |
| Alpha  | ijk11 |   42492 |     400 |     800 | FALSE |
| Alpha  | ijk11 |   42496 |     400 |     400 | TRUE  |
| Alpha  | ijk11 |   42500 |       2 |       2 | TRUE  |
| Alpha  | ijk12 |   32298 |      28 |      20 | FALSE |
| Alpha  | ijk13 |   40882 |       2 |       2 | TRUE  |
| Alpha  | ijk14 |   12712 |     393 |     393 | TRUE  |
| Alpha  | ijk14 |   12716 |     393 |     393 | TRUE  |
| Alpha  | ijk15 |   11133 |       1 |       1 | TRUE  |
| Alpha  | ijk15 |   11137 |     234 |     393 | FALSE |
| Alpha  | ijk16 |   15612 |       1 |       1 | TRUE  |
| Alpha  | ijk16 |   15616 |     234 |     393 | FALSE |
| Alpha  | ijk17 |   28613 |      10 |       5 | FALSE |
| Alpha  | ijk18 |   36150 |      10 |       5 | FALSE |
| Alpha  | ijk19 |   12232 |       0 |       0 | TRUE  |
| Alpha  | ijk19 |   12236 |       1 |       1 | TRUE  |
| Alpha  | ijk19 |   12240 |       2 |       2 | TRUE  |
| Alpha  | ijk19 |   12244 |       3 |       3 | TRUE  |
| Alpha  | ijk20 |   14215 |       1 |       1 | TRUE  |
| Alpha  | ijk20 |   14219 |       0 |       0 | TRUE  |
| Alpha  | ijk20 |   14223 |       2 |       2 | TRUE  |
| Alpha  | ijk20 |   14227 |       3 |       3 | TRUE  |
| Delta  | ijk00 |   23119 |     923 |     923 | TRUE  |
| Delta  | ijk01 |   21198 |     923 |     923 | TRUE  |
| Delta  | ijk02 |   12555 |     923 |     923 | TRUE  |
| Delta  | ijk03 |   16161 |     923 |     923 | TRUE  |
| Delta  | ijk04 |   24927 |      30 |      30 | TRUE  |
| Delta  | ijk04 |   24931 |      46 |      46 | TRUE  |
| Delta  | ijk04 |   24935 |      76 |      76 | TRUE  |
| Delta  | ijk05 |   21413 |      -2 |      -2 | TRUE  |
| Delta  | ijk05 |   21417 |     -18 |     -18 | TRUE  |
| Delta  | ijk05 |   21421 |      16 |      16 | TRUE  |
| Delta  | ijk06 |   37643 |      25 |      25 | TRUE  |
| Delta  | ijk06 |   37647 |       5 |       5 | TRUE  |
| Delta  | ijk06 |   37651 |       5 |       5 | TRUE  |
| Delta  | ijk07 |   35226 |      45 |      45 | TRUE  |
| Delta  | ijk07 |   35230 |     135 |     135 | TRUE  |
| Delta  | ijk07 |   35234 |    6075 |    6075 | TRUE  |
| Delta  | ijk08 |   36066 |      55 |      55 | TRUE  |
| Delta  | ijk08 |   36070 |      15 |      15 | TRUE  |
| Delta  | ijk08 |   36074 |       3 |       3 | TRUE  |
| Delta  | ijk09 |   30082 |      46 |      46 | TRUE  |
| Delta  | ijk09 |   30086 |      15 |      15 | TRUE  |
| Delta  | ijk09 |   30090 |       3 |       3 | TRUE  |
| Delta  | ijk10 |   21340 |     300 |     300 | TRUE  |
| Delta  | ijk10 |   21344 |     400 |     400 | TRUE  |
| Delta  | ijk10 |   21348 |       2 |       2 | TRUE  |
| Delta  | ijk11 |   25323 |     800 |     800 | TRUE  |
| Delta  | ijk11 |   25327 |     400 |     400 | TRUE  |
| Delta  | ijk11 |   25331 |       2 |       2 | TRUE  |
| Delta  | ijk12 |   20875 |      20 |      20 | TRUE  |
| Delta  | ijk13 |   17816 |       2 |       2 | TRUE  |
| Delta  | ijk14 |   13615 |     393 |     393 | TRUE  |
| Delta  | ijk14 |   13619 |     393 |     393 | TRUE  |
| Delta  | ijk15 |   26014 |       1 |       1 | TRUE  |
| Delta  | ijk15 |   26018 |     393 |     393 | TRUE  |
| Delta  | ijk16 |   10964 |       1 |       1 | TRUE  |
| Delta  | ijk16 |   10968 |     432 |     393 | FALSE |
| Delta  | ijk17 |   33280 |      10 |       5 | FALSE |
| Delta  | ijk18 |   41241 |       5 |       5 | TRUE  |
| Delta  | ijk19 |   17530 |       0 |       0 | TRUE  |
| Delta  | ijk19 |   17534 |       1 |       1 | TRUE  |
| Delta  | ijk19 |   17538 |       2 |       2 | TRUE  |
| Delta  | ijk19 |   17542 |       3 |       3 | TRUE  |
| Delta  | ijk19 |   17546 |     293 |     293 | TRUE  |
| Delta  | ijk20 |   21803 |       1 |       1 | TRUE  |
| Delta  | ijk20 |   21807 |       0 |       0 | TRUE  |
| Delta  | ijk20 |   21811 |       2 |       2 | TRUE  |
| Delta  | ijk20 |   21815 |       3 |       3 | TRUE  |
| Delta  | ijk20 |   21819 |     325 |     325 | TRUE  |

** Comentários por grupos
*** Lambda
- [X] Modulo ILOC.[ch]
  - Enum para os códigos das instruções
  - ~struct codigo_iloc~, ou ~codigo_iloc~
    - char* e estruturas com enum
- [X] Rótulos e registradores
  - Geração de código, funções auxiliares
  - ~gera_rotulo()~ e ~gera_registrador()~
- [X] Geração de código
  - A partir da AST, com ~gera_codigo_op_bin~
    - > 1 passagem (três passagens)
      - Léxica, sintática + semântica + gera código
  - Usou função de aridade indefinida para concatenar
  - Expressões aritméticas, com operações binárias
    - soma, subtração, divisão e multiplicação
  - Expressões booleanas por controle de fluxo com curto-circuito
    - todos os operadores relacionais
  - O comando de atribuição
  - Os seguintes comandos de fluxo de controle
    - if com else opcional
    - while
- [X] Coisas a mais
  - Somente a inicialização foi feita a mais, que é idêntica à atribuição
  - Operações básicas bitwise and e or pois tem instruções equivalentes em ILOC
- Valgrind Check!!!
*** Beta

Fizeram tudo.

- [X] Estruturas de dados ILOC
  - ~iloc.h~, ~strucut iloc_instruction~
  - vetor de ponteiros (/aka/ array list)
- [X] Label ~new_label~
  - Máximo de 16 caracteres, de acordo com o máximo inteiro que pode
    ser guardado em um int
- [X] Registrador é uma string ~new_register~
- [X] Geração de código em uma única passagem
  - [X] Cálculo de endereço na declaração de variáveis
  - [X] Curto circuito
  - [X] While
- [X] Valgrind não estava na spec
- [X] Testes automatizados que rodam no make
*** Alpha
- [X] Novo deadline para a E5: 23/06 às 23h59

- [X] Estrutura de dados ILOC
  - Módulo ILOC.h ILOC.c
- [X] Geração de registradores e labels
- [0/0] Geração de código, falta bastante
  - Atribuição, somas, aritmética
  - Falta o ~if~, ~while~, expressões booleanas e relacionais
    - Curto circuito
  - Escopo aninhado (offset das tabelas de símbolos) não implementado
*** Delta
- [X] Novo deadline para a E5: 23/06 às 23h59
** Notas Objetiva e Subjetiva

| Grupo  | E5.O | E5.S |
|--------+------+------|
| Alpha  | 7.92 |    6 |
| Beta   |   10 |   10 |
| Delta  | 9.58 |    7 |
| Lambda |   10 |   10 |
* Avaliação da Etapa 6                                             :noexport:
** Grupos que não entregaram até o prazo

| Grupo   | ID     |
|---------+--------|
| Delta   | ???103 |
| Alpha   | ???782 |

** Grupos que entregaram até o prazo extra fornecido

Até 30/06
- Delta em 26/06

** Entregas até o prazo

| Timestamp           | Grupo  |
|---------------------+--------|
| 2019-06-22 00:45:45 | Lambda |
| 2019-06-24 22:20:35 | Beta   |

** Arquivos para testes                                             :ATTACH:
:PROPERTIES:
:Attachments: e6tests.tgz
:ID:       d20c99ae-51bd-4ae9-809d-5d0cea129eac
:END:

Veja [[data/d2/0c99ae-51bd-4ae9-809d-5d0cea129eac/e6tests.tgz][este arquivo]].

Todas as entradas estão lexicalmente, sintaticamente e semântica
corretas de acordo com as etapas anteriores. A tabela abaixo demonstra
a localização dos valores na memória ao final do programa, assumindo
que os endereços de deslocamento se referem a base da pilha (=Stack=) ou
do segmento de dados (=Data=).


| Test | Type  | Address | Value |
|------+-------+---------+-------|
| e00  | Data  |       0 |    99 |
| e01  | Data  |       0 |    98 |
| e02  | Data  |       0 |    49 |
| e03  | Data  |       0 |   720 |
| e04  | Data  |       0 |    58 |
| e05  | Data  |       0 |     7 |
| e06  | Data  |       4 |    52 |
| e07  | Data  |       4 |   352 |

** Log dos testes automáticos                                       :ATTACH:
:PROPERTIES:
:Attachments: e6v0.log e6v1.log
:ID:       743408ae-6fab-47cf-ae1c-c9fd150b2859
:END:

Consulte [[./data/74/3408ae-6fab-47cf-ae1c-c9fd150b2859/e6v0.log][o arquivo de log]] e [[./data/74/3408ae-6fab-47cf-ae1c-c9fd150b2859/e6v1.log][o arquivo de log]] para obter os resultados
elementares (/raw/) dos testes automáticos. Cada linha começa pelo nome
do grupo, sendo que o separador é a barra vertical. A segunda coluna é
o identificador do teste, e a terceira coluna pode ser =stack=, =data=,
=input=, =output=, =memory= e =instruction=. Quando for =stack= e =data=, a quarta
coluna indica a base desses segmentos. Quando for =input=, a quarta
coluna contém a entrada fornecida pelo grupo (a saída do processo de
compilação) para o simulador ILOC. Quando for =output=, a quarta coluna
contém a saída do simulador ILOC. Quando for =memory=, a quarta coluna
contém endereços e valores da memória ao fim da simulação. E, enfim,
quando for =instruction=, a quarta coluna conterá as estatísticas das
instruções executadas (quantidade, instrução). É a partir deste
arquivo que é definida a tabela abaixo.
** Testes automáticos

A tabela abaixo mostra os resultados dos testes
automáticos, considerando as entradas do arquivos para testes.  A
coluna =Group= e =Test= identificam o grupo e o identificador do teste; a
coluna =Address= indica o endereço de memória onde o valor =Value.y= deve
ser registrado para o teste ser considerado certo. A coluna =Eval= é
assinalada =TRUE= (correta) quando o valor da coluna =Value.x=, registrado
no endereço pelo código ILOC emitido pelo grupo, for idêntico ao valor
em =Value.y= esperado. Os endereços da pilha e da base foram definidos
de maneira aleatória por teste. Somente aparecem aqueles testes onde a
solução do grupo fornece algum código ILOC válido na saída.

| Group  | Test | Address | Value.x | Value.y | Eval |
|--------+------+---------+---------+---------+------|
| Beta   | e00  |   17404 |      99 |      99 | TRUE |
| Beta   | e01  |   19878 |      98 |      98 | TRUE |
| Beta   | e02  |   14628 |      49 |      49 | TRUE |
| Beta   | e03  |   19258 |     720 |     720 | TRUE |
| Beta   | e04  |    9632 |      58 |      58 | TRUE |
| Beta   | e05  |   18193 |       7 |       7 | TRUE |
| Beta   | e06  |   20816 |      52 |      52 | TRUE |
| Beta   | e07  |   15519 |     352 |     352 | TRUE |
| Lambda | e00  |   11732 |      99 |      99 | TRUE |
| Lambda | e01  |   13609 |      98 |      98 | TRUE |
| Lambda | e02  |    9495 |      49 |      49 | TRUE |
| Lambda | e03  |   14263 |     720 |     720 | TRUE |
| Lambda | e04  |    6173 |      58 |      58 | TRUE |
| Lambda | e05  |   13211 |       7 |       7 | TRUE |
| Lambda | e06  |   18313 |      52 |      52 | TRUE |
| Lambda | e07  |   14575 |     352 |     352 | TRUE |
| Delta  | e00  |   13567 |      99 |      99 | TRUE |
| Delta  | e01  |    6616 |      98 |      98 | TRUE |
| Delta  | e02  |   16224 |      49 |      49 | TRUE |
| Delta  | e03  |   20196 |     720 |     720 | TRUE |
| Delta  | e04  |   16714 |      58 |      58 | TRUE |
| Delta  | e05  |   16891 |       7 |       7 | TRUE |
| Delta  | e06  |   14963 |      52 |      52 | TRUE |
| Delta  | e07  |    5482 |     352 |     352 | TRUE |

** Avaliação Subjetiva
*** Instrumento de avaliação

| Critério                | Peso |
|-------------------------+------|
| Informação ao professor |  0.5 |
| Projeto do RA           |    1 |
| Gerenciamento da Pilha  |    2 |
| Entrada/Saída padrão    |    1 |
| Inicialização regs.     |    1 |
| Opinião geral           |    4 |

*** Tabela subjetiva

| Grupo  | Critério                | Peso | Valor |
|--------+-------------------------+------+-------|
| Beta   | Informação ao professor |  0.5 |    10 |
| Beta   | Projeto do RA           |    1 |    10 |
| Beta   | Gerenciamento da Pilha  |    2 |    10 |
| Beta   | Entrada/Saída padrão    |    1 |    10 |
| Beta   | Inicialização regs.     |    1 |    10 |
| Beta   | Opinião geral           |    4 |    10 |
| Lambda | Informação ao professor |  0.5 |     0 |
| Lambda | Projeto do RA           |    1 |     5 |
| Lambda | Gerenciamento da Pilha  |    2 |    10 |
| Lambda | Entrada/Saída padrão    |    1 |    10 |
| Lambda | Inicialização regs.     |    1 |    10 |
| Lambda | Opinião geral           |    4 |     9 |
| Delta  | Informação ao professor |  0.5 |     0 |
| Delta  | Projeto do RA           |    1 |     0 |
| Delta  | Gerenciamento da Pilha  |    2 |    10 |
| Delta  | Entrada/Saída padrão    |    1 |    10 |
| Delta  | Inicialização regs.     |    1 |    10 |
| Delta  | Opinião geral           |    4 |     7 |

** Notas Objetiva e Subjetiva

| Grupo  | E6.O | E6.S |
|--------+------+------|
| Beta   |   10 |   10 |
| Delta  |   10 | 7.16 |
| Lambda |   10 | 8.53 |
