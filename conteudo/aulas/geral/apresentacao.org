# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent
#+LANGUAGE: pt-br
#+TAGS: noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export

#+Title: Apresentação da Disciplina
#+subtitle: 2022/1
#+Author: Prof. Lucas M. Schnorr (UFRGS)
#+Date: \copyleft

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [xcolor=dvipsnames]
#+OPTIONS:   H:1 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_HEADER: \input{../org-babel.tex}

* O professor
Prof. Lucas M. Schnorr
+ Prédio 43425, Sala 202
+ [[http://www.inf.ufrgs.br/~schnorr][http://www.inf.ufrgs.br/~schnorr]]
+ schnorr@inf.ufrgs.br

\vfill

Áreas de interesse para pesquisa
+ High Performance Computing (HPC) / Performance Analysis
+ Data Science / Visualization & Reproducibility
    
* O que sabemos antes de começar a disciplina?
+ O que faz um compilador?
+ Por que estudar compiladores?
+ Como é organizado um compilador?
* Como fazer a tradução?
** Código Fonte C                                                    :BMCOL:
    :PROPERTIES:
    :BEAMER_envargs: C[t]
    :BEAMER_col: 0.35
    :END:
\small
#+BEGIN_SRC C
int i;
double x;
i = 0;
x = 1.0;
while (i <= 10) {
  x = x * 2.0;
  i = i + 1;
}
#+END_SRC
** Código Assembly                                                   :BMCOL:
    :PROPERTIES:
    :BEAMER_envargs: C[t]
    :BEAMER_col: 0.65
    :END:
\scriptsize
#+BEGIN_SRC assembly
        movl    $0, -12(%ebp)   ;; i = 0
        fld1
        fstpl   -24(%ebp)       ;; x = 1.0;
        jmp     .L2
.L3:
        fldl    -24(%ebp)
        fadd    %st(0), %st     ;; x = 2 * x;
        fstpl   -24(%ebp)
        addl    $1, -12(%ebp)    ;; i+1
.L2:
        cmpl    $10, -12(%ebp)  ;; i <= ? 10
        jle     .L3             ;; SIM, goto L3
        movl    $0, %eax        
        ;; NAO, encerra...
#+END_SRC

* Integrando conhecimentos
+ Programação (Linguagem C, Scripts)
+ Linguagens Formais (gramáticas, autômatos)
+ Estruturas de Dados (pilhas, grafos, árvores, tabelas)
+ Sistemas Operacionais (memória, formato binário)
+ Organização de Computadores (processador, registros)

#+latex: \vfill\pause

+ É uma disciplina complexa
  + Forte background teórico/prático
* Aspectos interessantes
+ Quem trabalha com compiladores?
  + Todos os fabricantes de processadores
  + AMD/IBM/Intel/Cray/...
#+latex: \vfill\pause

+ Principais compiladores para a família C/C++
  + gcc -- http://gcc.gnu.org/
  + LLVM/clang -- http://www.llvm.org/
  + Intel (icc) \pause
+ Novas arquiteturas: Celulares, Raspberry Pi, ARM, ... \pause
+ Disciplina interessante sob vários aspectos
  + Compreender a implementação de uma linguagem
  + Usa técnicas e ferramentas avançadas de desenvolvimento
  + Técnicas de compiladores são aplicáveis em outras áreas

* Objetivos
+ Entender o funcionamento de um compilador
  + Teórico: algoritmos e estruturas de dados
  + Prático: projeto e implementação

#+latex: \pause

+ Projetar e implementar um compilador
  + Adquirir experiência de programação na linguagem C/C++

* Plano, cronograma, bibliografia, projeto

+ Súmula, conteúdo programático, bibliografia e cronograma
+ Procedimentos didáticos
+ Avaliação
  
#+BEGIN_CENTER
Consulte no Portal do Aluno da UFRGS
#+END_CENTER

Vamos revisar juntos seus elementos.

* Bibliografia Básica Essencial
- Aho, Alfred V.; Sethi, Ravi; Ullman, Jeffrey D.. Compiladores,
  princípios, técnicas e ferramentas. Rio de Janeiro: LTC,
  c1995. ISBN 8521610572.
- Grune, Dick. Projeto moderno de compiladores :implementação e
  aplicações. Rio de Janeiro: Campus, 2001. ISBN 8535208763.
- Levine, John R.; Mason, Tony; Brown, D.. Lex. USA:
  O'Reilly, 1992. ISBN 9781565920002.
* Bibliografia Básica
- Keith D. Cooper e Linda Torczon. Engineering a
  Compiler. Elsevier, 2012. ISBN 978-0-12-088478-0.
* Bibliografia Complementar
- Kernighan, Brian W.; Ritchie, Dennis M.. The C programming language. Prentice Hall, ISBN 0131103628.
* Material Público
- http://dinosaur.compilertools.net/
- http://dinosaur.compilertools.net/flex/manpage.html
- http://dinosaur.compilertools.net/bison/
- https://www.gnu.org/software/bison/manual/
- https://www.gnu.org/software/flex/manual/
* Experiências de Aprendizagem

#+latex: {\scriptsize
O conteúdo programático previsto para cada semana será apresentado na
forma de aulas expositivas com exercícios que podem ser realizados
tanto em aula - na forma de exemplos dirigidos estimulados - quanto
extraclasse. Ao longo do semestre, aulas em laboratório serão
utilizadas para acompanhamento do projeto de compilador e revisão do
material teórico.

#+latex: \smallskip

O conteúdo será avaliado na forma de duas provas presenciais conforme
cronograma estabelecido no início do semestre pelo professor da turma.
Uma parte fundamental da disciplina é o projeto e construção de um
compilador, tomando-se por base os conhecimentos das aulas
teóricas. Neste sentido, os alunos terão a oportunidade de:

#+latex: \smallskip

(1) programar um analisador léxico, ou com a ferramenta flex, ou pela
implementação de qualquer outro algoritmo;

(2) programar um analisador sintático, por exemplo com a ferramenta
tradicional bison, ou pela implementação de qualquer outro algoritmo;

(3) programar ações semânticas para gerar código, simplificado ou não;

(4) implementar um gerador de código abstrato no formato assembly.

#+latex: \smallskip

As atividades referentes ao projeto do compilador serão realizadas em
sete etapas incrementais, com data limite para conclusão ao longo do
semestre. Para cada uma delas, o professor retornará a avaliação sobre
o andamento da atividade com dicas e sugestões para melhorar a
execução do projeto (testes objetivos). Esse retorno pode ser tanto de
maneira assíncrona através do AVA Institucional quando de maneira
presencial nos encontros em laboratório. Haverá pelo menos três
encontros presenciais em laboratório entre o professor e os grupos com
o objetivo de acompanhar e discutir a execução do projeto do
compilador e tirar dúvidas.
#+latex: }

* Critérios de avaliação

A avaliação será feita da seguinte forma:
- Provas Escritas (P1, P2), peso 1
- Projeto do Compilador (T), peso 1
  - Sete etapas, com pesos idênticos entre elas

#+latex: \pause

Média Final (MF) = (P+T)/2

#+latex: \pause

Conversão

| MF >= 9,0       | Conceito A                    |
| 9.0 > MF >= 7,5 | Conceito B                    |
| 7,5 > MF >= 6,0 | Conceito C                    |
| MF < 6,0        | ver Atividades de Recuperação |

Presença
- A presença será aferida (75% de frequência evita FF)

* Atividades de Recuperação Parciais (Trabalho)

Cada nota parcial compondo a nota T poderá ser recuperada até o valor
máximo de 80% do valor original pela entrega de uma nova versão do
trabalho corrigindo os eventuais defeitos, em um prazo estipulado pelo
professor.

#+latex: \vfill\pause

Situações frequentes
- Não entregou na data estipulada
  - Extensão automática: uma semana para *entrega em atraso* (80%)
  - Não haverá novo prazo adicional de recuperação
- Entregou no prazo, professor fez a avaliação e nota menor que 6
  - Entra *em recuperação* \rightarrow uma semana para correções (80%)
- _Ressalvas_
  - Flexibilidades possíveis a critério do professor
  - Recuperação da última etapa condicionada ao calendário

* Atividade de Recuperação Final

Ao final do semestre, os alunos que não tiverem atingido desempenho
suficiente para a aprovação (MF >= 6.0), poderão realizar uma
atividade avaliativa geral de recuperação, que versará sobre todo o
conteúdo da disciplina. Para ser aprovado na disciplina, o discente
deverá atingir uma nota mínima na atividade avaliativa de recuperação
(Nota Mínina de Recuperação - NMR) determinada pela seguinte
expressão:

#+begin_center
NMR = 12 - MF
#+end_center

com NMR limitado ao valor máximo igual a 10 (dez) e MF sendo a Média
Final obtida pelo discente e descrita na seção "Critérios de
Avaliação". O discente em recuperação que atingir a nota mínima de
recuperação (NMR >= 6.0), será aprovado com conceito "C", caso
contrário, será reprovado (conceito "D").

* Ferramenta de apoio

#+BEGIN_CENTER
Sempre consulte o Moodle Institucional da UFRGS

https://moodle.ufrgs.br/course/view.php?id=102338
#+END_CENTER

#+latex: \vfill

Anúncios
- No fórum geral do link do moodle acima
- Via SAV (Sala de Aula Virtual)
  - Confirme que seu e-mail é o correto

* Cronograma
** Texto
:PROPERTIES:
:BEAMER_col: 0.2
:END:

_Cronograma_

#+latex: \bigskip

Verifique Moodle

#+latex: \bigskip

Vamos revisá-lo juntos.

#+latex: \bigskip

Não haverá aula entre os dias 16/07 e 31/07.

** Esquerda
:PROPERTIES:
:BEAMER_col: 0.8
:END:

#+attr_latex: :width \textwidth
[[/home/schnorr/svn/navajo/2022/cronograma/compiladores/Cronograma_2022-1.pdf]]
