#+STARTUP: overview indent
#+TITLE: Dúvidas da E2 do Projeto de Compilador
* E2
** DONE 2020-09-14
*** Pergunta #1 \times 2

  Por gentileza poderia me informar se nas variáveis locais também é
  possível receber uma lista composta de nomes de variáveis?

  1. Na declaração de variáveis locais (internas às funções) não está
     explicitamente dito que podem haver múltiplas variáveis
     declaradas em apenas uma linha lógica, como em:

  int x,y,z;

  porém este comportamento é permitido para variáveis globais
  (externas às funções) . Devemos aceitar isto em variáveis locais?

*** Pergunta #2

  2. A forma como as expressões estão definidas me parece um pouco
     contraditória:

  No primeiro parágrafo da seção 3.5 expressões aritméticas são
  definidas como contendo operadores aritméticos, e as expressões
  lógicas como contendo operadores relacionais e lógicos, porém, logo
  após é dito que "Nesta etapa do trabalho não há distinção entre
  expressões aritméticas, inteiras ou lógicas".

  Devemos forçar então que as expressões aritméticas contenham apenas
  operadores aritméticos e expressões lógicas apenas relacionais e
  lógicos, ou devemos aceitar quaisquer operadores na formação dessas
  expressões?

*** Pergunta #3

  3. Na declaração de vetores (nas variávies globais) e comandos do
     tipo shift é mencionado que certos valores devem ser "inteiros
     positivos". Se temos apenas o tipo do token recebido (Neste caso
     ~TK_LIT_INT~) como podemos forçar que este valor seja positivo?

** DONE 2020-09-15
*** Pergunta #1

Na especificação você comenta que não devemos ter conflitos tanto
Reduce/Reduce, quando Shift/Reduce. Isso estamos verificando com a
própria ferramenta Bison. Queria saber se precisamos garantir que a
gramática é LR(0). Testando com aquela gramática de "Expressões
Regulares Rudimentares" (E -> E + n | n), por exemplo, o bison não
aponta conflito, mesmo ela não sendo LR(0). Precisariamos alterar a
gramática nesse caso ou ainda podemos deixar assim?

*** Pergunta #2 

Podemos ter transições vazias em nossa gramática (considerando o mesmo
comentado na pergunta acima)?
** DONE 2020-09-18
*** Pergunta #1
Gostaria de saber se quando fazemos a detecção de erros precisamos
aderir ao modo pânico ou fazer o programa terminar a execução (como é
feita pela função do yyerror)?
** DONE 2020-09-19 P1
*** Pergunta #1
Não ficou claro para mim se as regras de associatividade e precedência
dos operadores da nossa gramática são relevantes para esta
etapa. Devemos, por algum motivo, considerá-las na criação das regras
ou elas serão utilizadas apenas em etapas futuras?
*** Pergunta #2
Alguns tokens definidos não estão sendo utilizados, como por exemplo
~TK_PR_THEN~, ~TK_OC_FORWARD_PIPE~ e ~TK_PR_CLASS~. Devemos retirar esses tokens do
parser.y e/ou scanner.l?
*** Pergunta #3
Ao encontrar um erro sintático, a execução deve terminar ou continuar
para analisar o resto da entrada?
*** Pergunta #4
Existe alguma forma de utilizar o ~TOKEN_ERRO~ para identificar erros
e/ou criar mensagens de erros mais informativas?
*** Pergunta #5
E só pra confirmar, todos pontos do enunciado que referenciam
"expressão" fazem menção ao conjunto de expressões definidas em 3.5,
certo?
** DONE 2020-09-19 P2
*** Pergunta #0

Na etapa1 havia aqueles símbolos que não estavam no pdf da
especificação, mas que nas suas anotações você mostrava como
válidas. Depois de outros vídeos você as removeu. Queria saber se
esses símbolos que inicialmente estavam previstos pra linguagem e que
depois você os retirou foram considerados como ERRO na etapa1?  Nosso
grupo adicionou eles achando que estavam previstos, e que se manteriam
no mínimo válidos na linguagem, o que foi marcado como erro na
avaliação de etapa1.

*** Pergunta #1

Na montagem da função de erro está nos causando erro na compilação em
um dos nossos computadores.  Seguimos a documentação em :
https://www.gnu.org/software/bison/manual/html_node/Syntax-Error-Reporting-Function.html
Mas só estamos conseguindo executar com o bison na versão mais recente
(3.7.+) em uma máquina Manjaro, enquanto em outro computador do grupo
com a versão 3.5.+ está dando erro com a definição de parse.error como
custom.  Queria saber se funcionando na versão 3.7 é suficiente para a
avaliação desta etapa?

*** Pergunta #2

Na seção de expressões está escrito que identificadores são operandos
de expressões. Creio que seja o caso, mas, apenas para confirmar,
seriam expressões também apenas identificadores?

*** Pergunta #3

Por que, na declaração de variáveis locais, diz que é aceito como
inicialização apenas literais e identificadores? É permitido aceitar
inicialização com uma expressão qualquer, assim como na atribuição?
Caso essa proposta seja rejeitada, ainda restaria a dúvida se os
identificadores poderiam ser arrays e, nesse caso, se o conteúdo entre
colchetes poderia ser uma expressão qualquer também.

Assim como na dúvida acima, é permitido que input¹ e output também
recebam uma expressão qualquer? A remoção de restrições desse tipo
torna a linguagem mais simples e um pouco mais expressiva. ¹Para
input, expressões seriam utilizadas apenas no conteúdo entre
colchetes, após um identificador.

Blocos de comando devem acabar com ponto e vírgula quando forem um
comando simples dentro de outro bloco (ou seja, quando não forem
criados devido a uma construção de controle de fluxo)?

*** Pergunta #4

A respeito das variáveis locais, deve ser possível inicializar mais de
uma variável simultaneamente?

Exemplo: int a, b, c  <=  0;

*** Pergunta #5

Uma duvida sobre a entrega da etapa2: Notei que faz parte da entrega
apenas os arquivos scanner.l e parser.y. Isso quer dizer que nao
devemos incluir o main.c no nosso makefile?
** TODO 2020-09-19 (E2 D4)
*** Pergunta #1

Como podemos elaborar as regras gramaticais para reconhecer a
gramática de acordo com uma determinada associatividade/precedência?

*** Pergunta #2

- Qual a influência dessas informações de associatividade/precedência
  no processo de reconhecimento sintático da gramática?

Ref Video: E2 D2

- Qual a relevância dessas informações para determinar se uma entrada
  é sintaticamente válida ou não? Pela resposta dada no vídeo me
  parece que vamos utilizar as regras da gramática como apoio para
  próximas análises... seria apenas essa a importância dessas
  informações nessa etapa?


